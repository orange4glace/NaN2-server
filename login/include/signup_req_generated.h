// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SIGNUPREQ_NAN2_LOGIN_H_
#define FLATBUFFERS_GENERATED_SIGNUPREQ_NAN2_LOGIN_H_

#include "flatbuffers/flatbuffers.h"

namespace nan2 {
namespace login {

struct SignupReq;

struct SignupReq FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_UUID = 4,
    VT_USER_NAME = 6
  };
  const flatbuffers::String *uuid() const {
    return GetPointer<const flatbuffers::String *>(VT_UUID);
  }
  const flatbuffers::String *user_name() const {
    return GetPointer<const flatbuffers::String *>(VT_USER_NAME);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_UUID) &&
           verifier.Verify(uuid()) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_USER_NAME) &&
           verifier.Verify(user_name()) &&
           verifier.EndTable();
  }
};

struct SignupReqBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_uuid(flatbuffers::Offset<flatbuffers::String> uuid) {
    fbb_.AddOffset(SignupReq::VT_UUID, uuid);
  }
  void add_user_name(flatbuffers::Offset<flatbuffers::String> user_name) {
    fbb_.AddOffset(SignupReq::VT_USER_NAME, user_name);
  }
  SignupReqBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  SignupReqBuilder &operator=(const SignupReqBuilder &);
  flatbuffers::Offset<SignupReq> Finish() {
    const auto end = fbb_.EndTable(start_, 2);
    auto o = flatbuffers::Offset<SignupReq>(end);
    return o;
  }
};

inline flatbuffers::Offset<SignupReq> CreateSignupReq(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> uuid = 0,
    flatbuffers::Offset<flatbuffers::String> user_name = 0) {
  SignupReqBuilder builder_(_fbb);
  builder_.add_user_name(user_name);
  builder_.add_uuid(uuid);
  return builder_.Finish();
}

inline flatbuffers::Offset<SignupReq> CreateSignupReqDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *uuid = nullptr,
    const char *user_name = nullptr) {
  return nan2::login::CreateSignupReq(
      _fbb,
      uuid ? _fbb.CreateString(uuid) : 0,
      user_name ? _fbb.CreateString(user_name) : 0);
}

inline const nan2::login::SignupReq *GetSignupReq(const void *buf) {
  return flatbuffers::GetRoot<nan2::login::SignupReq>(buf);
}

inline bool VerifySignupReqBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<nan2::login::SignupReq>(nullptr);
}

inline void FinishSignupReqBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<nan2::login::SignupReq> root) {
  fbb.Finish(root);
}

}  // namespace login
}  // namespace nan2

#endif  // FLATBUFFERS_GENERATED_SIGNUPREQ_NAN2_LOGIN_H_
